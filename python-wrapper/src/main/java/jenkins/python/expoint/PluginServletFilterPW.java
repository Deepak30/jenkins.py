package jenkins.python.expoint;


import hudson.ExtensionPoint;
import hudson.security.SecurityRealm;
import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import java.io.IOException;
import java.util.List;
import java.util.Vector;
import hudson.util.*;
import hudson.util.PluginServletFilter.*;
import jenkins.python.DataConvertor;
import jenkins.python.PythonExecutor;

/**
 * This class was automatically generated by the PWM tool on 2014/03/21.
 * @see hudson.util.PluginServletFilter
 */
public abstract class PluginServletFilterPW extends PluginServletFilter {
	private transient PythonExecutor pexec;

	private void initPython() {
		if (pexec == null) {
			pexec = new PythonExecutor(this);
			String[] jMethods = new String[0];
			String[] pFuncs = new String[0];
			Class[][] argTypes = new Class[0][];
			pexec.checkAbstrMethods(jMethods, pFuncs, argTypes);
			String[] functions = new String[3];
			functions[0] = "init";
			functions[1] = "do_filter";
			functions[2] = "destroy";
			int[] argsCount = new int[3];
			argsCount[0] = 1;
			argsCount[1] = 3;
			argsCount[2] = 0;
			pexec.registerFunctions(functions, argsCount);
		}
	}

	public PluginServletFilterPW() {
		super();
	}

	@Override
	public void doFilter(ServletRequest request, ServletResponse response, final FilterChain chain) throws IOException, ServletException {
		initPython();
		if (pexec.isImplemented(1)) {
			pexec.execPythonVoid("do_filter", request, response, chain);
		} else {
			super.doFilter(request, response, chain);
		}
	}

	@Override
	public void destroy() {
		initPython();
		if (pexec.isImplemented(2)) {
			pexec.execPythonVoid("destroy");
		} else {
			super.destroy();
		}
	}

	public void superInit(FilterConfig filterConfig) throws ServletException {
		super.init(filterConfig);
	}

	public void superDoFilter(ServletRequest request, ServletResponse response, final FilterChain chain) throws IOException, ServletException {
		super.doFilter(request, response, chain);
	}

	public void superDestroy() {
		super.destroy();
	}

	public Object execPython(String function, Object... params) {
		initPython();
		return pexec.execPython(function, params);
	}

	public byte execPythonByte(String function, Object... params) {
		initPython();
		return pexec.execPythonByte(function, params);
	}

	public short execPythonShort(String function, Object... params) {
		initPython();
		return pexec.execPythonShort(function, params);
	}

	public char execPythonChar(String function, Object... params) {
		initPython();
		return pexec.execPythonChar(function, params);
	}

	public int execPythonInt(String function, Object... params) {
		initPython();
		return pexec.execPythonInt(function, params);
	}

	public long execPythonLong(String function, Object... params) {
		initPython();
		return pexec.execPythonLong(function, params);
	}

	public float execPythonFloat(String function, Object... params) {
		initPython();
		return pexec.execPythonFloat(function, params);
	}

	public double execPythonDouble(String function, Object... params) {
		initPython();
		return pexec.execPythonDouble(function, params);
	}

	public boolean execPythonBool(String function, Object... params) {
		initPython();
		return pexec.execPythonBool(function, params);
	}

	public void execPythonVoid(String function, Object... params) {
		initPython();
		pexec.execPythonVoid(function, params);
	}
}
